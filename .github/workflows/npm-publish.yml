name: Publish to npm

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install
        
      - name: Get current version and increment patch
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION, New version: $NEW_VERSION"
      
      - name: Update version in package.json
        run: |
          # Create a temporary file with the updated version
          node -e "
            const pkg = require('./package.json');
            pkg.version = '${{ steps.version.outputs.new_version }}';
            
            // Remove postversion script if it exists
            if (pkg.scripts && pkg.scripts.postversion) {
              delete pkg.scripts.postversion;
            }
            
            fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');
          "
          cat package.json

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 